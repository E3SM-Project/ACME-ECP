module Fixture_mod
   implicit none
   public

contains

@Before
   subroutine mySetup()
      implicit none
      open(unit=10, file='testData.txt', form='formatted', access='sequential', status='new')
      write(10,'(a)')'record 1'
      write(10,'(a)')'record 2'
      rewind(10)
   end subroutine mySetup
   
@After
   subroutine myTearDown()
      implicit none
      close(10, status='delete')
   end subroutine myTearDown

@Test
   subroutine testRead()
      use pfunit_mod
      implicit none
      integer :: value
      character(len=20) :: string
      
      read(10,'(a6,1x,i5)') string, value
      @assertEqual(1, value)
      
      read(10,'(a6,1x,i5)') string, value
      @assertEqual(2, value)
      
   end subroutine testRead

@Test
   subroutine testEOF()
      use ISO_FORTRAN_ENV
      use pfunit_mod
      implicit none
      integer :: value
      character(len=20) :: string
      integer :: eof
      
      read(10,'(a6,1x,i5)') string, value
      read(10,'(a6,1x,i5)') string, value
      read(10,'(a6,1x,i5)', iostat=eof) string, value
      
      @assertEqual(IOSTAT_END, eof)

   end subroutine testEOF

end module Fixture_mod


